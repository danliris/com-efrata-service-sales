// <auto-generated />
using System;
using Com.Danliris.Service.Sales.Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Com.Danliris.Service.Sales.Lib.Migrations
{
    [DbContext(typeof(SalesDbContext))]
    [Migration("20190812040240_Add_Column_IsROAccepted_on_CostCalculationGarment")]
    partial class Add_Column_IsROAccepted_on_CostCalculationGarment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ArticleColor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description")
                        .HasMaxLength(4000);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("ArticleColors");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.CostCalculationGarments.CostCalculationGarment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccessoriesAllowance");

                    b.Property<bool>("Active");

                    b.Property<string>("ApprovedIEBy")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ApprovedIEDate");

                    b.Property<string>("ApprovedMDBy")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ApprovedMDDate");

                    b.Property<string>("ApprovedPPICBy")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ApprovedPPICDate");

                    b.Property<string>("ApprovedPurchasingBy")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ApprovedPurchasingDate");

                    b.Property<string>("Article");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("BuyerBrandCode");

                    b.Property<int>("BuyerBrandId");

                    b.Property<string>("BuyerBrandName");

                    b.Property<string>("BuyerCode");

                    b.Property<string>("BuyerId");

                    b.Property<string>("BuyerName");

                    b.Property<string>("Code");

                    b.Property<double>("CommissionPortion");

                    b.Property<double>("CommissionRate");

                    b.Property<string>("Commodity");

                    b.Property<string>("CommodityDescription");

                    b.Property<string>("ComodityCode");

                    b.Property<string>("ComodityID");

                    b.Property<DateTimeOffset>("ConfirmDate");

                    b.Property<double>("ConfirmPrice");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("Description");

                    b.Property<int>("EfficiencyId");

                    b.Property<double>("EfficiencyValue");

                    b.Property<double>("FabricAllowance");

                    b.Property<double>("Freight");

                    b.Property<double>("FreightCost");

                    b.Property<string>("ImageFile");

                    b.Property<string>("ImagePath");

                    b.Property<double>("Index");

                    b.Property<double>("Insurance");

                    b.Property<bool>("IsApprovedIE");

                    b.Property<bool>("IsApprovedMD");

                    b.Property<bool>("IsApprovedPPIC");

                    b.Property<bool>("IsApprovedPurchasing");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsROAccepted");

                    b.Property<bool>("IsValidatedROPPIC");

                    b.Property<bool>("IsValidatedROSample");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("LeadTime");

                    b.Property<double>("NETFOB");

                    b.Property<double>("NETFOBP");

                    b.Property<double>("OTL1CalculatedRate");

                    b.Property<int>("OTL1Id");

                    b.Property<double>("OTL1Rate");

                    b.Property<double>("OTL2CalculatedRate");

                    b.Property<int>("OTL2Id");

                    b.Property<double>("OTL2Rate");

                    b.Property<long>("PreSCId");

                    b.Property<string>("PreSCNo")
                        .HasMaxLength(255);

                    b.Property<double>("ProductionCost");

                    b.Property<int>("Quantity");

                    b.Property<string>("ROAcceptedBy");

                    b.Property<DateTimeOffset>("ROAcceptedDate");

                    b.Property<int?>("RO_GarmentId");

                    b.Property<string>("RO_Number");

                    b.Property<int>("RateId");

                    b.Property<double>("RateValue");

                    b.Property<double>("Risk");

                    b.Property<long?>("SCGarmentId");

                    b.Property<double>("SMV_Cutting");

                    b.Property<double>("SMV_Finishing");

                    b.Property<double>("SMV_Sewing");

                    b.Property<double>("SMV_Total");

                    b.Property<string>("Section");

                    b.Property<string>("SizeRange");

                    b.Property<int>("THRId");

                    b.Property<double>("THRRate");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UOMCode");

                    b.Property<string>("UOMID");

                    b.Property<string>("UOMUnit");

                    b.Property<string>("UnitCode");

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName");

                    b.Property<string>("ValidationPPICBy")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("ValidationPPICDate");

                    b.Property<int>("WageId");

                    b.Property<double>("WageRate");

                    b.HasKey("Id");

                    b.ToTable("CostCalculationGarments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.CostCalculationGarments.CostCalculationGarment_Material", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<double>("BudgetQuantity");

                    b.Property<double?>("CM_Price");

                    b.Property<string>("CategoryCode");

                    b.Property<string>("CategoryId");

                    b.Property<string>("CategoryName");

                    b.Property<string>("Code");

                    b.Property<string>("Composition");

                    b.Property<string>("Construction");

                    b.Property<double>("Conversion");

                    b.Property<long>("CostCalculationGarmentId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<string>("Information");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsPRMaster");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PO");

                    b.Property<string>("PO_SerialNumber");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductId");

                    b.Property<double>("Quantity");

                    b.Property<double>("ShippingFeePortion");

                    b.Property<double>("Total");

                    b.Property<double>("TotalShippingFee");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UOMPriceId");

                    b.Property<string>("UOMPriceName");

                    b.Property<string>("UOMQuantityId");

                    b.Property<string>("UOMQuantityName");

                    b.Property<string>("Width");

                    b.Property<string>("Yarn");

                    b.Property<bool>("isFabricCM");

                    b.HasKey("Id");

                    b.HasIndex("CostCalculationGarmentId");

                    b.ToTable("CostCalculationGarment_Materials");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.Efficiency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("FinalRange");

                    b.Property<int>("InitialRange");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Efficiencies");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Color")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(25);

                    b.Property<int>("CurrencyID");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(25);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long?>("FinishingPrintingSalesContractId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.HasKey("Id");

                    b.HasIndex("FinishingPrintingSalesContractId");

                    b.ToTable("FinishingPrintingSalesContractDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankAccountName");

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(25);

                    b.Property<string>("AccountBankCurrencyCode")
                        .HasMaxLength(25);

                    b.Property<int>("AccountBankCurrencyID")
                        .HasMaxLength(255);

                    b.Property<double>("AccountBankCurrencyRate");

                    b.Property<string>("AccountBankCurrencySymbol")
                        .HasMaxLength(25);

                    b.Property<int>("AccountBankID");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(255);

                    b.Property<string>("AccountBankNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("AgentCode")
                        .HasMaxLength(25);

                    b.Property<int>("AgentID");

                    b.Property<string>("AgentName")
                        .HasMaxLength(255);

                    b.Property<double>("Amount");

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<int>("BuyerID");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("Commission")
                        .HasMaxLength(255);

                    b.Property<string>("CommodityCode")
                        .HasMaxLength(25);

                    b.Property<string>("CommodityDescription")
                        .HasMaxLength(1000);

                    b.Property<int>("CommodityID");

                    b.Property<string>("CommodityName")
                        .HasMaxLength(255);

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveredTo")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DeliverySchedule");

                    b.Property<string>("DesignMotiveCode")
                        .HasMaxLength(25);

                    b.Property<int>("DesignMotiveID");

                    b.Property<string>("DesignMotiveName")
                        .HasMaxLength(255);

                    b.Property<string>("DispositionNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("FromStock");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialCode")
                        .HasMaxLength(25);

                    b.Property<string>("MaterialConstructionCode")
                        .HasMaxLength(25);

                    b.Property<int>("MaterialConstructionId");

                    b.Property<string>("MaterialConstructionName")
                        .HasMaxLength(255);

                    b.Property<int>("MaterialID");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(255);

                    b.Property<string>("MaterialWidth")
                        .HasMaxLength(255);

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("OrderTypeCode")
                        .HasMaxLength(25);

                    b.Property<int>("OrderTypeID");

                    b.Property<string>("OrderTypeName")
                        .HasMaxLength(255);

                    b.Property<string>("Packing")
                        .HasMaxLength(1000);

                    b.Property<string>("PieceLength")
                        .HasMaxLength(255);

                    b.Property<double>("PointLimit");

                    b.Property<int>("PointSystem");

                    b.Property<string>("QualityCode")
                        .HasMaxLength(25);

                    b.Property<int>("QualityID");

                    b.Property<string>("QualityName")
                        .HasMaxLength(255);

                    b.Property<double>("RemainingQuantity");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(25);

                    b.Property<string>("ShipmentDescription")
                        .HasMaxLength(1000);

                    b.Property<double>("ShippingQuantityTolerance")
                        .HasMaxLength(1000);

                    b.Property<string>("TermOfPaymentCode")
                        .HasMaxLength(25);

                    b.Property<int>("TermOfPaymentID");

                    b.Property<bool>("TermOfPaymentIsExport");

                    b.Property<string>("TermOfPaymentName")
                        .HasMaxLength(255);

                    b.Property<string>("TermOfShipment")
                        .HasMaxLength(1000);

                    b.Property<string>("TransportFee")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<int>("UOMID");

                    b.Property<string>("UOMUnit")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<string>("YarnMaterialCode")
                        .HasMaxLength(25);

                    b.Property<int>("YarnMaterialID");

                    b.Property<string>("YarnMaterialName")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SalesContractNo")
                        .IsUnique()
                        .HasFilter("[SalesContractNo] IS NOT NULL");

                    b.ToTable("FinishingPrintingSalesContracts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentBookingOrderModel.GarmentBookingOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("BookingOrderDate");

                    b.Property<string>("BookingOrderNo");

                    b.Property<string>("BuyerCode");

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName");

                    b.Property<DateTimeOffset?>("CanceledDate");

                    b.Property<double>("CanceledQuantity");

                    b.Property<double>("ConfirmedQuantity");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<DateTimeOffset?>("ExpiredBookingDate");

                    b.Property<double>("ExpiredBookingQuantity");

                    b.Property<bool>("HadConfirmed");

                    b.Property<bool>("IsBlockingPlan");

                    b.Property<bool>("IsCanceled");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("Remark");

                    b.Property<string>("SectionCode");

                    b.Property<long>("SectionId");

                    b.Property<string>("SectionName");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("GarmentBookingOrders");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentBookingOrderModel.GarmentBookingOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long>("BookingOrderId");

                    b.Property<DateTimeOffset>("CanceledDate");

                    b.Property<string>("ComodityCode");

                    b.Property<long>("ComodityId");

                    b.Property<string>("ComodityName");

                    b.Property<DateTimeOffset>("ConfirmDate");

                    b.Property<double>("ConfirmQuantity");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<bool>("IsCanceled");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("BookingOrderId");

                    b.ToTable("GarmentBookingOrderItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentMasterPlan.MaxWHConfirmModel.MaxWHConfirm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("SKMaxValue");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<double>("UnitMaxValue");

                    b.HasKey("Id");

                    b.ToTable("MaxWHConfirms");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentMasterPlan.WeeklyPlanModels.GarmentWeeklyPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<short>("Year");

                    b.HasKey("Id");

                    b.ToTable("GarmentWeeklyPlans");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentMasterPlan.WeeklyPlanModels.GarmentWeeklyPlanItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AHTotal");

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("EHTotal");

                    b.Property<double>("Efficiency");

                    b.Property<DateTimeOffset>("EndDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<byte>("Month");

                    b.Property<int>("Operator");

                    b.Property<int>("RemainingEH");

                    b.Property<DateTimeOffset>("StartDate");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<int>("UsedEH");

                    b.Property<double>("WHConfirm");

                    b.Property<byte>("WeekNumber");

                    b.Property<long>("WeeklyPlanId");

                    b.Property<double>("WorkingHours");

                    b.HasKey("Id");

                    b.HasIndex("WeeklyPlanId");

                    b.ToTable("GarmentWeeklyPlanItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentPreSalesContractModel.GarmentPreSalesContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerAgentCode");

                    b.Property<int>("BuyerAgentId");

                    b.Property<string>("BuyerAgentName");

                    b.Property<string>("BuyerBrandCode");

                    b.Property<int>("BuyerBrandId");

                    b.Property<string>("BuyerBrandName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsCC");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPR");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("OrderQuantity");

                    b.Property<string>("Remark");

                    b.Property<DateTimeOffset>("SCDate");

                    b.Property<string>("SCNo")
                        .HasMaxLength(255);

                    b.Property<string>("SCType");

                    b.Property<string>("SectionCode");

                    b.Property<int>("SectionId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("GarmentPreSalesContracts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentSalesContractModel.GarmentSalesContract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountBankId");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(500);

                    b.Property<string>("AccountName")
                        .HasMaxLength(500);

                    b.Property<bool>("Active");

                    b.Property<double>("Amount");

                    b.Property<string>("Article")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerBrandCode");

                    b.Property<int>("BuyerBrandId");

                    b.Property<string>("BuyerBrandName");

                    b.Property<string>("ComodityCode")
                        .HasMaxLength(500);

                    b.Property<int>("ComodityId");

                    b.Property<string>("ComodityName")
                        .HasMaxLength(500);

                    b.Property<int>("CostCalculationId");

                    b.Property<string>("Country")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Delivery")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("Description")
                        .HasMaxLength(3000);

                    b.Property<string>("DocPresented")
                        .HasMaxLength(3000);

                    b.Property<bool>("DocPrinted");

                    b.Property<string>("FOB")
                        .HasMaxLength(3000);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEmbrodiary");

                    b.Property<bool>("IsMaterial");

                    b.Property<bool>("IsPrinted");

                    b.Property<bool>("IsTTPayment");

                    b.Property<bool>("IsTrimming");

                    b.Property<bool>("IsWash");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Material")
                        .HasMaxLength(3000);

                    b.Property<string>("NoHS")
                        .HasMaxLength(3000);

                    b.Property<string>("Packing")
                        .HasMaxLength(1000);

                    b.Property<string>("PaymentDetail");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<string>("RONumber")
                        .HasMaxLength(255);

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UomId");

                    b.Property<string>("UomUnit");

                    b.HasKey("Id");

                    b.ToTable("GarmentSalesContracts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentSalesContractModel.GarmentSalesContractItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description")
                        .HasMaxLength(3000);

                    b.Property<long>("GSCId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<double>("Quantity");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("GSCId");

                    b.ToTable("GarmentSalesContractItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentSewingBlockingPlanModel.GarmentSewingBlockingPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BookingItems");

                    b.Property<DateTimeOffset>("BookingOrderDate");

                    b.Property<long>("BookingOrderId");

                    b.Property<string>("BookingOrderNo")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("Remark");

                    b.Property<string>("Status");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("GarmentSewingBlockingPlans");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentSewingBlockingPlanModel.GarmentSewingBlockingPlanItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<long>("BlockingPlanId");

                    b.Property<string>("ComodityCode")
                        .HasMaxLength(255);

                    b.Property<long>("ComodityId");

                    b.Property<string>("ComodityName")
                        .HasMaxLength(500);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<double>("EHBooking");

                    b.Property<double>("Efficiency");

                    b.Property<DateTimeOffset>("EndDate");

                    b.Property<bool>("IsConfirm");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("Remark");

                    b.Property<double>("SMVSewing");

                    b.Property<DateTimeOffset>("StartDate");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<byte>("WeekNumber");

                    b.Property<long>("WeeklyPlanId");

                    b.Property<long>("WeeklyPlanItemId");

                    b.Property<short>("Year");

                    b.HasKey("Id");

                    b.HasIndex("BlockingPlanId");

                    b.ToTable("GarmentSewingBlockingPlanItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_DetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ColorRequest")
                        .HasMaxLength(255);

                    b.Property<string>("ColorTemplate")
                        .HasMaxLength(255);

                    b.Property<string>("ColorType")
                        .HasMaxLength(255);

                    b.Property<string>("ColorTypeId")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_Details");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_LampStandardModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("LampStandardId");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(1000);

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_LampStandard");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_RunWidthModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long?>("ProductionOrderModelId");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductionOrderModelId");

                    b.ToTable("ProductionOrder_RunWidth");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("AccountUserName");

                    b.Property<bool>("Active");

                    b.Property<string>("ArticleFabricEdge");

                    b.Property<long>("AutoIncreament");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("DesignCode");

                    b.Property<string>("DesignMotiveCode")
                        .HasMaxLength(25);

                    b.Property<int>("DesignMotiveID");

                    b.Property<string>("DesignMotiveName")
                        .HasMaxLength(255);

                    b.Property<string>("DesignNumber")
                        .HasMaxLength(255);

                    b.Property<double>("DistributedQuantity");

                    b.Property<string>("FinishTypeCode")
                        .HasMaxLength(255);

                    b.Property<long>("FinishTypeId");

                    b.Property<string>("FinishTypeName")
                        .HasMaxLength(1000);

                    b.Property<string>("FinishTypeRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("FinishWidth")
                        .HasMaxLength(255);

                    b.Property<string>("HandlingStandard")
                        .HasMaxLength(255);

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsRequested");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialCode")
                        .HasMaxLength(255);

                    b.Property<string>("MaterialConstructionCode")
                        .HasMaxLength(255);

                    b.Property<long>("MaterialConstructionId");

                    b.Property<string>("MaterialConstructionName")
                        .HasMaxLength(1000);

                    b.Property<string>("MaterialConstructionRemark");

                    b.Property<long>("MaterialId");

                    b.Property<string>("MaterialName")
                        .HasMaxLength(1000);

                    b.Property<string>("MaterialOrigin");

                    b.Property<double>("MaterialPrice");

                    b.Property<string>("MaterialTags")
                        .HasMaxLength(255);

                    b.Property<string>("MaterialWidth")
                        .HasMaxLength(1000);

                    b.Property<string>("OrderNo")
                        .HasMaxLength(255);

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("OrderTypeCode")
                        .HasMaxLength(255);

                    b.Property<long>("OrderTypeId");

                    b.Property<string>("OrderTypeName")
                        .HasMaxLength(1000);

                    b.Property<string>("OrderTypeRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("PackingInstruction")
                        .HasMaxLength(1000);

                    b.Property<string>("ProcessTypeCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProcessTypeId");

                    b.Property<string>("ProcessTypeName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProcessTypeRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("ProfileFirstName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProfileGender")
                        .HasMaxLength(255);

                    b.Property<string>("ProfileLastName")
                        .HasMaxLength(1000);

                    b.Property<string>("Remark");

                    b.Property<string>("Run")
                        .HasMaxLength(255);

                    b.Property<long>("SalesContractId");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(255);

                    b.Property<string>("Sample")
                        .HasMaxLength(1000);

                    b.Property<double>("ShippingQuantityTolerance");

                    b.Property<string>("ShrinkageStandard")
                        .HasMaxLength(255);

                    b.Property<string>("StandardTestCode")
                        .HasMaxLength(255);

                    b.Property<long>("StandardTestId");

                    b.Property<string>("StandardTestName")
                        .HasMaxLength(1000);

                    b.Property<string>("StandardTestRemark")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("YarnMaterialCode")
                        .HasMaxLength(255);

                    b.Property<long>("YarnMaterialId");

                    b.Property<string>("YarnMaterialName")
                        .HasMaxLength(1000);

                    b.Property<string>("YarnMaterialRemark")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("ProductionOrder");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.Rate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(50);

                    b.Property<long>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<long>("CostCalculationGarmentId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("ImagesName");

                    b.Property<string>("ImagesPath");

                    b.Property<string>("Instruction");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Total");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("CostCalculationGarmentId");

                    b.ToTable("RO_Garments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment_SizeBreakdown", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<int>("ColorId");

                    b.Property<string>("ColorName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("RO_GarmentId");

                    b.Property<int>("Total");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("RO_GarmentId");

                    b.ToTable("RO_Garment_SizeBreakdowns");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment_SizeBreakdown_Detail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Information");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Quantity");

                    b.Property<long>("RO_Garment_SizeBreakdownId");

                    b.Property<string>("Size");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("RO_Garment_SizeBreakdownId");

                    b.ToTable("RO_Garment_SizeBreakdown_Details");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.Spinning.SpinningSalesContractModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(255);

                    b.Property<long>("AccountBankId");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(1000);

                    b.Property<string>("AccountBankNumber");

                    b.Property<string>("AccountCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("AccountCurrencyId")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("AgentCode")
                        .HasMaxLength(255);

                    b.Property<long>("AgentId");

                    b.Property<string>("AgentName")
                        .HasMaxLength(1000);

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("BankName")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("Comission")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityCode")
                        .HasMaxLength(255);

                    b.Property<string>("ComodityDescription");

                    b.Property<long>("ComodityId");

                    b.Property<string>("ComodityName")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityType")
                        .HasMaxLength(255);

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveredTo")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DeliverySchedule");

                    b.Property<string>("DispositionNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("FromStock");

                    b.Property<string>("IncomeTax")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("Packing")
                        .HasMaxLength(1000);

                    b.Property<string>("PieceLength")
                        .HasMaxLength(1000);

                    b.Property<double>("Price");

                    b.Property<string>("QualityCode")
                        .HasMaxLength(255);

                    b.Property<long>("QualityId");

                    b.Property<string>("QualityName")
                        .HasMaxLength(1000);

                    b.Property<string>("Remark");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(255);

                    b.Property<string>("ShipmentDescription");

                    b.Property<double>("ShippingQuantityTolerance");

                    b.Property<string>("TermOfPaymentCode")
                        .HasMaxLength(255);

                    b.Property<long>("TermOfPaymentId");

                    b.Property<bool>("TermOfPaymentIsExport");

                    b.Property<string>("TermOfPaymentName")
                        .HasMaxLength(1000);

                    b.Property<string>("TermOfShipment")
                        .HasMaxLength(1000);

                    b.Property<string>("TransportFee")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SpinningSalesContract");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.Weaving.WeavingSalesContractModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(255);

                    b.Property<long>("AccountBankId");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(1000);

                    b.Property<string>("AccountBankNumber");

                    b.Property<string>("AccountCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("AccountCurrencyId")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("AgentCode")
                        .HasMaxLength(255);

                    b.Property<long>("AgentId");

                    b.Property<string>("AgentName")
                        .HasMaxLength(1000);

                    b.Property<int>("AutoIncrementNumber");

                    b.Property<string>("BankName")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<long>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("BuyerType")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("Comission")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityCode")
                        .HasMaxLength(255);

                    b.Property<string>("ComodityDescription");

                    b.Property<long>("ComodityId");

                    b.Property<string>("ComodityName")
                        .HasMaxLength(1000);

                    b.Property<string>("ComodityType")
                        .HasMaxLength(255);

                    b.Property<string>("Condition")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveredTo")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DeliverySchedule");

                    b.Property<string>("DispositionNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("FromStock");

                    b.Property<string>("IncomeTax")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MaterialConstructionCode")
                        .HasMaxLength(255);

                    b.Property<long>("MaterialConstructionId");

                    b.Property<string>("MaterialConstructionName")
                        .HasMaxLength(1000);

                    b.Property<string>("MaterialConstructionRemark");

                    b.Property<string>("MaterialWidth")
                        .HasMaxLength(255);

                    b.Property<double>("OrderQuantity");

                    b.Property<string>("Packing")
                        .HasMaxLength(1000);

                    b.Property<string>("PieceLength")
                        .HasMaxLength(1000);

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<double>("ProductPrice");

                    b.Property<string>("ProductTags")
                        .HasMaxLength(255);

                    b.Property<string>("QualityCode")
                        .HasMaxLength(255);

                    b.Property<long>("QualityId");

                    b.Property<string>("QualityName")
                        .HasMaxLength(1000);

                    b.Property<string>("Remark");

                    b.Property<string>("SalesContractNo")
                        .HasMaxLength(255);

                    b.Property<string>("ShipmentDescription");

                    b.Property<double>("ShippingQuantityTolerance");

                    b.Property<string>("TermOfPaymentCode")
                        .HasMaxLength(255);

                    b.Property<long>("TermOfPaymentId");

                    b.Property<bool>("TermOfPaymentIsExport");

                    b.Property<string>("TermOfPaymentName")
                        .HasMaxLength(1000);

                    b.Property<string>("TermOfShipment")
                        .HasMaxLength(1000);

                    b.Property<string>("TransportFee")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<long>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.Property<string>("YarnMaterialCode")
                        .HasMaxLength(255);

                    b.Property<long>("YarnMaterialId");

                    b.Property<string>("YarnMaterialName")
                        .HasMaxLength(1000);

                    b.Property<string>("YarnMaterialRemark");

                    b.HasKey("Id");

                    b.ToTable("WeavingSalesContract");
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.CostCalculationGarments.CostCalculationGarment_Material", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.CostCalculationGarments.CostCalculationGarment", "CostCalculationGarment")
                        .WithMany("CostCalculationGarment_Materials")
                        .HasForeignKey("CostCalculationGarmentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.FinishingPrinting.FinishingPrintingSalesContractModel", "FinishingPrintingSalesContract")
                        .WithMany("Details")
                        .HasForeignKey("FinishingPrintingSalesContractId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentBookingOrderModel.GarmentBookingOrderItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.GarmentBookingOrderModel.GarmentBookingOrder", "GarmentBookingOrder")
                        .WithMany("Items")
                        .HasForeignKey("BookingOrderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentMasterPlan.WeeklyPlanModels.GarmentWeeklyPlanItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.GarmentMasterPlan.WeeklyPlanModels.GarmentWeeklyPlan", "WeeklyPlan")
                        .WithMany("Items")
                        .HasForeignKey("WeeklyPlanId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentSalesContractModel.GarmentSalesContractItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.GarmentSalesContractModel.GarmentSalesContract", "GarmentSalesContract")
                        .WithMany("Items")
                        .HasForeignKey("GSCId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.GarmentSewingBlockingPlanModel.GarmentSewingBlockingPlanItem", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.GarmentSewingBlockingPlanModel.GarmentSewingBlockingPlan", "GarmentSewingBlockingPlan")
                        .WithMany("Items")
                        .HasForeignKey("BlockingPlanId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_DetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany("Details")
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_LampStandardModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany("LampStandards")
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrder_RunWidthModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ProductionOrder.ProductionOrderModel", "ProductionOrderModel")
                        .WithMany("RunWidths")
                        .HasForeignKey("ProductionOrderModelId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.CostCalculationGarments.CostCalculationGarment", "CostCalculationGarment")
                        .WithMany()
                        .HasForeignKey("CostCalculationGarmentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment_SizeBreakdown", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment", "RO_Garment")
                        .WithMany("RO_Garment_SizeBreakdowns")
                        .HasForeignKey("RO_GarmentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment_SizeBreakdown_Detail", b =>
                {
                    b.HasOne("Com.Danliris.Service.Sales.Lib.Models.ROGarments.RO_Garment_SizeBreakdown", "RO_Garment_SizeBreakdown")
                        .WithMany("RO_Garment_SizeBreakdown_Details")
                        .HasForeignKey("RO_Garment_SizeBreakdownId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
